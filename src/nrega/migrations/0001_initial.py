# Generated by Django 2.1.3 on 2018-12-21 01:27

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APWorkPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('applicantNo', models.PositiveSmallIntegerField(blank=True, db_index=True, null=True)),
                ('musterNo', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('finyear', models.CharField(blank=True, max_length=2, null=True)),
                ('workCode', models.CharField(blank=True, max_length=128, null=True)),
                ('workName', models.CharField(blank=True, max_length=2046, null=True)),
                ('dateFrom', models.DateField(blank=True, null=True)),
                ('dateTo', models.DateField(blank=True, null=True)),
                ('daysWorked', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('accountNo', models.CharField(blank=True, max_length=256, null=True)),
                ('modeOfPayment', models.CharField(blank=True, max_length=256, null=True)),
                ('payorderAmount', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('payorderNo', models.CharField(blank=True, max_length=256, null=True)),
                ('payorderDate', models.DateField(blank=True, null=True)),
                ('epayorderNo', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('epayorderDate', models.DateField(blank=True, null=True)),
                ('payingAgencyDate', models.DateField(blank=True, null=True)),
                ('creditedDate', models.DateField(blank=True, null=True)),
                ('disbursedAmount', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('disbursedDate', models.DateField(blank=True, null=True)),
                ('isDelayedPayment', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'apWorkPayment',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(db_index=True, max_length=7, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('tcode', models.CharField(blank=True, max_length=7, null=True, unique=True)),
            ],
            options={
                'db_table': 'block',
            },
        ),
        migrations.CreateModel(
            name='CrawlQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.PositiveSmallIntegerField(default=0)),
                ('crawlMode', models.CharField(choices=[('FULL', 'FULL'), ('PARTIAL', 'PARTIAL'), ('ONLYSTATS', 'ONLYSTATS')], default='FULL', max_length=32)),
                ('downloadStage', models.CharField(default='NICStats', max_length=256)),
                ('instanceJSONURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('workDetailJSONURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('downloadStep', models.PositiveSmallIntegerField(default=0)),
                ('startFinYear', models.CharField(default='16', max_length=2)),
                ('progress', models.PositiveSmallIntegerField(default=0)),
                ('attemptCount', models.PositiveSmallIntegerField(default=0)),
                ('stepError', models.BooleanField(default=False)),
                ('downloadAttemptCount', models.PositiveSmallIntegerField(default=0)),
                ('crawlStartDate', models.DateTimeField(blank=True, null=True)),
                ('crawlAttemptDate', models.DateTimeField(blank=True, null=True)),
                ('dataDownloadDate', models.DateTimeField(blank=True, null=True)),
                ('pending', models.IntegerField(blank=True, default=0, null=True)),
                ('crawlDuration', models.IntegerField(blank=True, default=0, null=True)),
                ('isComplete', models.BooleanField(default=False)),
                ('stepStarted', models.BooleanField(default=False)),
                ('stepCompleted', models.BooleanField(default=False)),
                ('inProgress', models.BooleanField(default=False)),
                ('isError', models.BooleanField(default=False)),
                ('isProcessDriven', models.BooleanField(default=False)),
                ('error', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
            ],
            options={
                'db_table': 'crawlQueue',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(db_index=True, max_length=4, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('tcode', models.CharField(blank=True, max_length=8, null=True)),
                ('isEnumerated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='DPTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobcard', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('name', models.CharField(max_length=512)),
                ('finyear', models.CharField(max_length=2)),
                ('musterNo', models.CharField(db_index=True, max_length=64)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('paymentDate', models.DateField(blank=True, null=True)),
                ('delayDays', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('delayCompensation', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('status', models.CharField(blank=True, max_length=4096, null=True)),
            ],
            options={
                'db_table': 'DPTransaction',
            },
        ),
        migrations.CreateModel(
            name='FTO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ftoNo', models.CharField(db_index=True, max_length=256)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('ftoURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('paymentMode', models.CharField(blank=True, max_length=64, null=True)),
                ('finyear', models.CharField(db_index=True, max_length=2)),
                ('firstSignatoryDate', models.DateField(blank=True, null=True)),
                ('secondSignatoryDate', models.DateField(blank=True, null=True)),
                ('ftofinyear', models.CharField(blank=True, max_length=2, null=True)),
                ('contentFileURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('allWorkerFound', models.BooleanField(default=False)),
                ('allWDFound', models.BooleanField(default=False)),
                ('isComplete', models.BooleanField(default=False)),
                ('isDownloaded', models.BooleanField(default=False)),
                ('downloadDate', models.DateTimeField(blank=True, null=True)),
                ('downloadAttemptCount', models.PositiveSmallIntegerField(default=0)),
                ('errorDate', models.DateTimeField(blank=True, null=True)),
                ('isError', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
            ],
            options={
                'db_table': 'fto',
            },
        ),
        migrations.CreateModel(
            name='FTOTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ftoIndex', models.PositiveSmallIntegerField()),
                ('creditedAmount', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('referenceNo', models.CharField(blank=True, max_length=256, null=True)),
                ('transactionDate', models.DateField(blank=True, null=True)),
                ('processDate', models.DateField(blank=True, null=True)),
                ('rejectionReason', models.CharField(blank=True, max_length=4096, null=True)),
                ('primaryAccountHolder', models.CharField(blank=True, max_length=4096, null=True)),
                ('jobcardRaw', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('fto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.FTO')),
            ],
            options={
                'db_table': 'ftoTransaction',
            },
        ),
        migrations.CreateModel(
            name='GenericReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='NONE', max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('updateDate', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'genericReport',
            },
        ),
        migrations.CreateModel(
            name='Jobcard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('tjobcard', models.CharField(blank=True, db_index=True, max_length=24, null=True)),
                ('jobcard', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('jcNo', models.BigIntegerField(blank=True, null=True)),
                ('headOfHousehold', models.CharField(blank=True, max_length=512, null=True)),
                ('surname', models.CharField(blank=True, max_length=512, null=True)),
                ('caste', models.CharField(blank=True, max_length=64, null=True)),
                ('applicationDate', models.DateField(auto_now_add=True, null=True)),
                ('isVillageInfoMissing', models.BooleanField(default=False)),
                ('isWorkerTableMissing', models.BooleanField(default=False)),
                ('isPaymentTableMissing', models.BooleanField(default=False)),
                ('allApplicantFound', models.BooleanField(default=False)),
                ('contentFileURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('isDownloaded', models.BooleanField(default=False)),
                ('downloadDate', models.DateTimeField(blank=True, null=True)),
                ('errorDate', models.DateTimeField(blank=True, null=True)),
                ('isError', models.BooleanField(default=False)),
                ('downloadAttemptCount', models.PositiveSmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'jobcard',
            },
        ),
        migrations.CreateModel(
            name='JobcardStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finyear', models.CharField(max_length=2)),
                ('daysWorked', models.IntegerField(blank=True, default=0, null=True)),
                ('nicDaysProvided', models.IntegerField(blank=True, default=0, null=True)),
                ('daysProvided', models.IntegerField(blank=True, default=0, null=True)),
                ('daysDemanded', models.IntegerField(blank=True, default=0, null=True)),
                ('totalCredited', models.IntegerField(blank=True, null=True)),
                ('totalPending', models.IntegerField(blank=True, null=True)),
                ('totalRejected', models.IntegerField(blank=True, null=True)),
                ('totalWages', models.IntegerField(blank=True, null=True)),
                ('jobcard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Jobcard')),
            ],
            options={
                'db_table': 'jobcardStat',
            },
        ),
        migrations.CreateModel(
            name='LanguageDict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase1', models.CharField(max_length=1024)),
                ('lang1', models.CharField(max_length=1024)),
                ('phrase2', models.CharField(blank=True, max_length=1024, null=True)),
                ('lang2', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'languageDict',
            },
        ),
        migrations.CreateModel(
            name='LibtechTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='NONE', max_length=256)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('slug', models.SlugField(blank=True)),
            ],
            options={
                'db_table': 'libtechTag',
            },
        ),
        migrations.CreateModel(
            name='Muster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finyear', models.CharField(max_length=2)),
                ('musterNo', models.CharField(db_index=True, max_length=64)),
                ('musterType', models.CharField(max_length=4)),
                ('workCode', models.CharField(max_length=128)),
                ('workName', models.CharField(max_length=2046)),
                ('dateFrom', models.DateField(default=datetime.date.today)),
                ('dateTo', models.DateField(default=datetime.date.today)),
                ('paymentDate', models.DateField(blank=True, null=True)),
                ('musterURL', models.CharField(max_length=1024)),
                ('contentFileURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
                ('allApplicantFound', models.BooleanField(default=False)),
                ('allWorkerFound', models.BooleanField(default=False)),
                ('isComplete', models.BooleanField(default=False)),
                ('isJSONProcessed', models.BooleanField(default=False)),
                ('isDownloaded', models.BooleanField(default=False)),
                ('downloadDate', models.DateTimeField(blank=True, null=True)),
                ('errorDate', models.DateTimeField(blank=True, null=True)),
                ('isError', models.BooleanField(default=False)),
                ('downloadAttemptCount', models.PositiveSmallIntegerField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
            ],
            options={
                'db_table': 'muster',
            },
        ),
        migrations.CreateModel(
            name='Panchayat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(db_index=True, max_length=10, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('tcode', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=256, null=True)),
                ('lastCrawlDate', models.DateTimeField(blank=True, null=True)),
                ('lastCrawlDuration', models.IntegerField(blank=True, null=True)),
                ('accuracyIndex', models.IntegerField(blank=True, null=True)),
                ('accuracyIndexAverage', models.IntegerField(blank=True, null=True)),
                ('isDataAccurate', models.BooleanField(default=False)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
                ('libtechTag', models.ManyToManyField(blank=True, related_name='panchayatTag', to='nrega.LibtechTag')),
            ],
            options={
                'db_table': 'panchayat',
            },
        ),
        migrations.CreateModel(
            name='PanchayatCrawlInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('accuracy', models.PositiveSmallIntegerField(default=0)),
                ('instanceJSONURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('workDetailJSONURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('dataDownloadDate', models.DateTimeField(blank=True, null=True)),
                ('missingJSONURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('crawlDuration', models.IntegerField(blank=True, default=0, null=True)),
                ('panchayat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat')),
            ],
            options={
                'db_table': 'panchayatCrawlInfo',
            },
        ),
        migrations.CreateModel(
            name='PanchayatStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finyear', models.CharField(max_length=2)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('accuracy', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('jobcardRegisterCrawlDate', models.DateTimeField(blank=True, null=True)),
                ('nicWorkDays', models.IntegerField(blank=True, null=True)),
                ('nicTotalDaysProvided', models.IntegerField(blank=True, null=True)),
                ('nicTotalWages', models.IntegerField(blank=True, null=True)),
                ('nicJobcardsTotal', models.IntegerField(blank=True, null=True)),
                ('nicWorkersTotal', models.IntegerField(blank=True, null=True)),
                ('libtechWorkDays', models.IntegerField(blank=True, null=True)),
                ('libtechWorkDaysProvided', models.IntegerField(blank=True, null=True)),
                ('libtechWorkDaysPanchayatwise', models.IntegerField(blank=True, null=True)),
                ('libtechTotalWages', models.IntegerField(blank=True, null=True)),
                ('libtechPendingWages', models.IntegerField(blank=True, null=True)),
                ('libtechCreditedWages', models.IntegerField(blank=True, null=True)),
                ('libtechRejectedWages', models.IntegerField(blank=True, null=True)),
                ('jobcardsTotal', models.IntegerField(blank=True, null=True)),
                ('workersTotal', models.IntegerField(blank=True, null=True)),
                ('mustersTotal', models.IntegerField(blank=True, null=True)),
                ('mustersPendingDownload', models.IntegerField(blank=True, null=True)),
                ('mustersPendingProcessing', models.IntegerField(blank=True, null=True)),
                ('mustersInComplete', models.IntegerField(blank=True, null=True)),
                ('musterMissingApplicants', models.IntegerField(blank=True, null=True)),
                ('mustersDownloaded', models.IntegerField(blank=True, null=True)),
                ('mustersProcessed', models.IntegerField(blank=True, null=True)),
                ('workDaysAccuracyIndex', models.IntegerField(blank=True, null=True)),
                ('totalTransactions', models.IntegerField(blank=True, null=True)),
                ('totalPending', models.IntegerField(blank=True, null=True)),
                ('totalRejected', models.IntegerField(blank=True, null=True)),
                ('totalInvalid', models.IntegerField(blank=True, null=True)),
                ('totalPendingPercentage', models.IntegerField(blank=True, null=True)),
                ('totalRejectedPercentage', models.IntegerField(blank=True, null=True)),
                ('totalInvalidPercentage', models.IntegerField(blank=True, null=True)),
                ('wagelistTotal', models.IntegerField(blank=True, null=True)),
                ('wagelistDownloaded', models.IntegerField(blank=True, null=True)),
                ('wagelistPending', models.IntegerField(blank=True, null=True)),
                ('panchayat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat')),
            ],
            options={
                'db_table': 'panchayatStat',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportType', models.CharField(max_length=256)),
                ('reportURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('finyear', models.CharField(max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
                ('panchayat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='RN6TransactionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('transactionDate', models.DateField(blank=True, null=True)),
                ('transactionReference', models.CharField(blank=True, max_length=256, null=True)),
                ('withdrawnAt', models.CharField(blank=True, max_length=256, null=True)),
                ('deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('withdrawal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'rn6TransactionDetail',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('code', models.CharField(db_index=True, max_length=2, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('crawlIP', models.CharField(blank=True, max_length=256, null=True)),
                ('stateShortCode', models.CharField(max_length=2)),
                ('isNIC', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('tcode', models.CharField(blank=True, max_length=12, null=True)),
                ('panchayat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat')),
            ],
            options={
                'db_table': 'village',
            },
        ),
        migrations.CreateModel(
            name='Wagelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wagelistNo', models.CharField(max_length=256)),
                ('wagelistURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('finyear', models.CharField(db_index=True, max_length=2)),
                ('contentFileURL', models.URLField(blank=True, max_length=2048, null=True)),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
                ('generateDate', models.DateField(blank=True, null=True)),
                ('isComplete', models.BooleanField(default=False)),
                ('isDownloaded', models.BooleanField(default=False)),
                ('allFTOFound', models.BooleanField(default=False)),
                ('allWorkerFound', models.BooleanField(default=False)),
                ('downloadDate', models.DateTimeField(blank=True, null=True)),
                ('downloadAttemptCount', models.PositiveSmallIntegerField(default=0)),
                ('errorDate', models.DateTimeField(blank=True, null=True)),
                ('isError', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Block')),
                ('panchayat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat')),
            ],
            options={
                'db_table': 'wagelist',
            },
        ),
        migrations.CreateModel(
            name='WagelistTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wagelistIndex', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('daysWorked', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('totalWage', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('isRegenerated', models.BooleanField(default=False)),
                ('isWagelistFTOAbsent', models.BooleanField(default=False)),
                ('fto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.FTO')),
                ('wagelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Wagelist')),
            ],
            options={
                'db_table': 'wagelistTransaction',
            },
        ),
        migrations.CreateModel(
            name='WorkDemand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workDemandDate', models.DateField()),
                ('finyear', models.CharField(db_index=True, max_length=2)),
                ('daysDemanded', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'workDemand',
            },
        ),
        migrations.CreateModel(
            name='WorkDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
                ('musterIndex', models.PositiveSmallIntegerField()),
                ('daysWorked', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('daysProvided', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('dayWage', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('totalWage', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('musterStatus', models.CharField(blank=True, max_length=64, null=True)),
                ('accountNo', models.CharField(blank=True, max_length=256, null=True)),
                ('bankName', models.CharField(blank=True, max_length=256, null=True)),
                ('branchName', models.CharField(blank=True, max_length=256, null=True)),
                ('branchCode', models.CharField(blank=True, max_length=256, null=True)),
                ('rejectedFlag', models.BooleanField(default=False)),
                ('creditedDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('isCredited', models.BooleanField(default=False)),
                ('isNICDelayedPayment', models.BooleanField(default=False)),
                ('isNICDelayAccounted', models.BooleanField(default=False)),
                ('isDelayedPayment', models.BooleanField(default=False)),
                ('nicDelayDays', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('delayDays', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('paymentDelay', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ftoDelay', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('curWagelist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Wagelist')),
                ('dpTransaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.DPTransaction')),
                ('muster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Muster')),
                ('wagelist', models.ManyToManyField(blank=True, related_name='wdWagelist', to='nrega.Wagelist')),
                ('wagelistTransaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.WagelistTransaction')),
            ],
            options={
                'db_table': 'workDetail',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('code', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('applicantNo', models.PositiveSmallIntegerField()),
                ('fatherHusbandName', models.CharField(blank=True, max_length=512, null=True)),
                ('relationship', models.CharField(blank=True, max_length=64, null=True)),
                ('gender', models.CharField(blank=True, max_length=256, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('isDisabled', models.BooleanField(default=False)),
                ('isMinority', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, max_length=512, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('is15Days', models.BooleanField(default=False)),
                ('isSample30', models.BooleanField(default=False)),
                ('isSample', models.BooleanField(default=False)),
                ('isExtraSample30', models.BooleanField(default=False)),
                ('isExtraSample', models.BooleanField(default=False)),
                ('jobcard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Jobcard')),
                ('libtechTag', models.ManyToManyField(blank=True, related_name='workerTag', to='nrega.LibtechTag')),
            ],
            options={
                'db_table': 'worker',
            },
        ),
        migrations.CreateModel(
            name='WorkerStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finyear', models.CharField(max_length=2)),
                ('workDays', models.IntegerField(blank=True, null=True)),
                ('nicDaysProvided', models.IntegerField(blank=True, null=True)),
                ('totalCredited', models.IntegerField(blank=True, null=True)),
                ('totalPending', models.IntegerField(blank=True, null=True)),
                ('totalRejected', models.IntegerField(blank=True, null=True)),
                ('totalWages', models.IntegerField(blank=True, null=True)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker')),
            ],
            options={
                'db_table': 'workerStat',
            },
        ),
        migrations.AddField(
            model_name='workdetail',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AddField(
            model_name='workdemand',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AddField(
            model_name='wagelisttransaction',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AddField(
            model_name='rn6transactiondetail',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AddField(
            model_name='muster',
            name='panchayat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat'),
        ),
        migrations.AddField(
            model_name='jobcard',
            name='libtechTag',
            field=models.ManyToManyField(blank=True, related_name='jobcardTag', to='nrega.LibtechTag'),
        ),
        migrations.AddField(
            model_name='jobcard',
            name='panchayat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat'),
        ),
        migrations.AddField(
            model_name='jobcard',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Village'),
        ),
        migrations.AddField(
            model_name='genericreport',
            name='libtechTag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.LibtechTag'),
        ),
        migrations.AddField(
            model_name='genericreport',
            name='panchayat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat'),
        ),
        migrations.AddField(
            model_name='ftotransaction',
            name='jobcard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Jobcard'),
        ),
        migrations.AddField(
            model_name='ftotransaction',
            name='wagelist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Wagelist'),
        ),
        migrations.AddField(
            model_name='fto',
            name='panchayat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat'),
        ),
        migrations.AddField(
            model_name='dptransaction',
            name='muster',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Muster'),
        ),
        migrations.AddField(
            model_name='dptransaction',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.State'),
        ),
        migrations.AddField(
            model_name='crawlqueue',
            name='libtechTag',
            field=models.ManyToManyField(blank=True, related_name='crawlTag', to='nrega.LibtechTag'),
        ),
        migrations.AddField(
            model_name='crawlqueue',
            name='panchayat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Panchayat'),
        ),
        migrations.AddField(
            model_name='crawlqueue',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='block',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nrega.District'),
        ),
        migrations.AddField(
            model_name='block',
            name='libtechTag',
            field=models.ManyToManyField(blank=True, related_name='blockTag', to='nrega.LibtechTag'),
        ),
        migrations.AddField(
            model_name='apworkpayment',
            name='jobcard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Jobcard'),
        ),
        migrations.AddField(
            model_name='apworkpayment',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nrega.Worker'),
        ),
        migrations.AlterUniqueTogether(
            name='workerstat',
            unique_together={('worker', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='worker',
            unique_together={('jobcard', 'name', 'applicantNo')},
        ),
        migrations.AlterUniqueTogether(
            name='workdetail',
            unique_together={('muster', 'musterIndex')},
        ),
        migrations.AlterUniqueTogether(
            name='workdemand',
            unique_together={('worker', 'workDemandDate')},
        ),
        migrations.AlterUniqueTogether(
            name='wagelisttransaction',
            unique_together={('wagelist', 'wagelistIndex')},
        ),
        migrations.AlterUniqueTogether(
            name='wagelist',
            unique_together={('wagelistNo', 'block', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='rn6transactiondetail',
            unique_together={('worker', 'transactionDate', 'transactionReference')},
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together={('block', 'panchayat', 'reportType', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='panchayatstat',
            unique_together={('panchayat', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='muster',
            unique_together={('musterNo', 'block', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='jobcardstat',
            unique_together={('jobcard', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='jobcard',
            unique_together={('jobcard', 'panchayat')},
        ),
        migrations.AlterUniqueTogether(
            name='ftotransaction',
            unique_together={('fto', 'ftoIndex')},
        ),
        migrations.AlterUniqueTogether(
            name='fto',
            unique_together={('ftoNo', 'block', 'finyear')},
        ),
        migrations.AlterUniqueTogether(
            name='apworkpayment',
            unique_together={('jobcard', 'epayorderNo')},
        ),
    ]
